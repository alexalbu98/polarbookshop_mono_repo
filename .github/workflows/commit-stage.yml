name: Commit Stage
on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - develop
      - main

env:
  REGISTRY: ghcr.io
  CATALOG_SERVICE_IMAGE: alexalbu98/catalog-service
  CONFIG_SERVER_IMAGE: alexalbu98/config-server
  VERSION: latest

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Code vulnerability scanning with Grype
        uses: anchore/scan-action@v3
        id: scan
        with:
          path: "${{ github.workspace }}"
          fail-build: false
          severity-cutoff: 'high'
          output-format: sarif

      - name: Upload vulnerability report
        uses: github/codeql-action/upload-sarif@v3
        if: success() || failure()
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}

      - name: Build, unit tests and integration tests
        run: |
          chmod +x mvnw
          ./mvnw clean install

      - name: Static code analysis with PMD
        run: |
          chmod +x mvnw
          ./mvnw pmd:check

      - name: Code coverage check with JaCoCo
        run: |
          chmod +x mvnw
          ./mvnw jacoco:check

  package:
    name: Package and Publish
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: build
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
      security-events: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21
          cache: maven
      - name: Build container image
        run: |
          chmod +x mvnw
          ./mvnw spring-boot:build-image
      - name: OCI Catalog Service vulnerability scanning
        uses: anchore/scan-action@v3
        with:
          image: ${{ env.REGISTRY }}/${{ env.CATALOG_SERVICE_IMAGE }}:${{ env.VERSION }}
          fail-build: false
          severity-cutoff: high
      - name: OCI Config Server vulnerability scanning
        uses: anchore/scan-action@v3
        with:
          image: ${{ env.REGISTRY }}/${{ env.CONFIG_SERVER_IMAGE }}:${{ env.VERSION }}
          fail-build: false
          severity-cutoff: high
      - name: Upload vulnerability report
        uses: github/codeql-action/upload-sarif@v4
        if: success() || failure()
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}
      - name: Log into container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish Catalog Service
        run: docker push {{ env.REGISTRY }}/${{ env.CATALOG_SERVICE_IMAGE }}:${{ env.VERSION }}
      - name: Publish Config Server
        run: docker push {{ env.REGISTRY }}/${{ env.CONFIG_SERVER_IMAGE }}:${{ env.VERSION }}
