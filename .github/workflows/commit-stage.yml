name: Commit Stage
on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - develop
      - main

env:
  REGISTRY: ghcr.io
  VERSION: latest

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Code vulnerability scanning with Grype
        uses: anchore/scan-action@v3
        id: scan
        with:
          path: "${{ github.workspace }}"
          fail-build: false
          severity-cutoff: 'high'
          output-format: sarif

      - name: Upload vulnerability report
        uses: github/codeql-action/upload-sarif@v3
        if: success() || failure()
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}

      - name: Build, unit tests and integration tests
        run: |
          chmod +x mvnw
          ./mvnw clean install

      - name: Static code analysis with PMD
        run: |
          chmod +x mvnw
          ./mvnw pmd:check

      - name: Code coverage check with JaCoCo
        run: |
          chmod +x mvnw
          ./mvnw jacoco:check

      - name: Prepare Kubeval
        uses: alexellis/arkade-get@master
        with:
          kubectl: latest
          kubeval: latest

      - name: Run Kubeval
        run: |
          kubeval --strict -d deployment/K8s/services

  package:
    name: Package and Publish
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: build
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
      security-events: write
    strategy:
      matrix:
        service: [ catalog-service, config-server ]

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21
          cache: maven

      - name: Build container image
        run: |
          chmod +x mvnw
          echo "Building image"
          ./mvnw spring-boot:build-image -Dspring-boot.build-image.imageName=${{ env.REGISTRY }}/${{ github.actor }}/${{ matrix.service }}:${{ env.VERSION }}

      - name: Log into container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.ACCESS_TOKEN }}

      - name: OCI docker image vulnerability scanning
        uses: anchore/scan-action@v6
        id: scan
        with:
          image: ${{ env.REGISTRY }}/${{ github.actor }}/${{ matrix.service }}:${{ env.VERSION }}
          fail-build: false
          severity-cutoff: high

      - name: Upload vulnerability report
        uses: github/codeql-action/upload-sarif@v4
        if: success() || failure()
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}

      - name: Publish to container registry
        run: docker push ${{ env.REGISTRY }}/${{ github.actor }}/${{ matrix.service }}:${{ env.VERSION }}